# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  # build_and_test:
    # machine: true # Use a Linux VM instead of docker environment
    # working_directory: ~/repo
    # steps:
    #   - checkout
    #   - run:
    #       name: Build and run docker containers
    #       command: |
    #         docker-compose build
    #         docker-compose up -d website
    #   - run:
    #       name: Run unit tests
    #       command: docker-compose run test-runner /opt/utils/tests_unit.sh
    #   - run:
    #       name: Run integration tests
    #       command: docker-compose run test-runner /opt/utils/tests_integration.sh
    #   - run:
    #       name: Clean docker-compose
    #       command: docker-compose down
  deploy_and_staging:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless
      - setup_remote_docker 
      - run:
          name: package and deploy site-downloader to dev stage
          command: |
            cd src/escape-rooms-club/site-downloader
            sudo sls plugin install -n serverless-python-requirements
            sls deploy
      - run:
          name: test lambda invocation in dev stage
          command: |
            sls invoke -f site-downloader --path local/dev_stage_valid_event.json
            sls invoke -f site-downloader --path local/dev_stage_invalid_event.json
      - run:
          name: package and deploy site-downloader to prod stage
          command: |
            sls deploy --stage prod
      - run:
          name: test lambda invocation in prod stage
          command: |
            sls invoke -f site-downloader --stage prod --path local/prod_stage_valid_event.json
            sls invoke -f site-downloader --stage prod --path local/prod_stage_invalid_event.json

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      # - build_and_test
      - deploy_and_staging
          # requires:
            # - build_and_test
